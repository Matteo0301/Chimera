# This GitHub workflow config has been generated by a script via
#
#   haskell-ci 'github' 'Chimera.cabal'
#
# To regenerate the script (for example after adjusting tested-with) run
#
#   haskell-ci regenerate
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.17.20231203
#
# REGENDATA ("0.17.20231203",["github","Chimera.cabal"])
#
name: Haskell-CI
on:
  - push
  - pull_request
jobs:
  linux:
    name: Haskell-CI - Linux - ${{ matrix.compiler }}
    runs-on: ubuntu-20.04
    timeout-minutes:
      60
    container:
      image: buildpack-deps:bionic
    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        include:
          - compiler: ghc-9.4.7
            compilerKind: ghc
            compilerVersion: 9.4.7
            setup-method: ghcup
            allow-failure: false
      fail-fast: false
    steps:
      - name: apt
        run: |
          apt-get update
          apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git software-properties-common libtinfo5 z3
          mkdir -p "$HOME/.ghcup/bin"
          curl -sL https://downloads.haskell.org/ghcup/0.1.20.0/x86_64-linux-ghcup-0.1.20.0 > "$HOME/.ghcup/bin/ghcup"
          chmod a+x "$HOME/.ghcup/bin/ghcup"
          "$HOME/.ghcup/bin/ghcup" install ghc "$HCVER" || (cat "$HOME"/.ghcup/logs/*.* && false)
          "$HOME/.ghcup/bin/ghcup" install cabal 3.10.2.0 || (cat "$HOME"/.ghcup/logs/*.* && false)
        env:
          HCKIND: ${{ matrix.compilerKind }}
          HCNAME: ${{ matrix.compiler }}
          HCVER: ${{ matrix.compilerVersion }}
      - name: update cabal index
        run: |
          cabal v2-update -v
      - name: install cabal-plan
        run: |
          mkdir -p $HOME/.cabal/bin
          curl -sL https://github.com/haskell-hvr/cabal-plan/releases/download/v0.7.3.0/cabal-plan-0.7.3.0-x86_64-linux.xz > cabal-plan.xz
          echo 'f62ccb2971567a5f638f2005ad3173dba14693a45154c1508645c52289714cb2  cabal-plan.xz' | sha256sum -c -
          xz -d < cabal-plan.xz > $HOME/.cabal/bin/cabal-plan
          rm -f cabal-plan.xz
          chmod a+x $HOME/.cabal/bin/cabal-plan
          cabal-plan --version
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: source
      - name: dump install plan
        run: |
          cabal v2-build  --enable-tests --enable-benchmarks --dry-run all
          cabal-plan
      - name: restore cache
        uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ github.sha }}
          path: |
            ~/.cache/cabal
            ~/.config/cabal
            ~/.local/state/cabal
            ~/.local/bin
            dist-newstyle
          restore-keys: ${{ runner.os }}-${{ matrix.compiler }}-
      - name: install dependencies
        run: |
          cabal v2-build  --disable-tests --disable-benchmarks --dependencies-only -j2 all
          cabal v2-build  --enable-tests --enable-benchmarks --dependencies-only -j2 all
      - name: build w/o tests
        run: |
          cabal v2-build  --disable-tests --disable-benchmarks all
      - name: build
        run: |
          cabal v2-build  --enable-tests --enable-benchmarks all --write-ghc-environment-files=always
      - name: tests
        run: |
          cabal v2-test  --enable-tests --enable-benchmarks all --test-show-details=direct
      - name: cabal check
        run: |
          cabal -vnormal check
      - name: haddock
        run: |
          cabal v2-haddock --disable-documentation --haddock-all --enable-tests --enable-benchmarks all
      - name: save cache
        uses: actions/cache/save@v3
        if: always()
        with:
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ github.sha }}
          path: ~/.cabal/store
